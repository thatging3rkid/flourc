package lang.flour.lexer;

public class Token {
    private String text;
    private String file_name;
    private int file_line;
    private int file_col;

    public Token(String text, String file_name, int file_line, int file_col) {
        this.text = text;
        this.file_name = file_name;
        this.file_line = file_line;
        this.file_col = file_col;
    }

    public Token(Token t) {
        this.text = t.getText();
        this.file_name = t.getFile_name();
        this.file_line = t.getFile_line();
        this.file_col = t.getFile_col();
    }

    public String getText() {
        return text;
    }

    public String getFile_name() {
        return file_name;
    }

    public int getFile_line() {
        return file_line;
    }

    public int getFile_col() {
        return file_col;
    }

    @Override
    public String toString() {

        return "`" + this.text.replace("\n", "\\n") + "`:" + this.file_name + ":" + this.file_line + ":" + this.file_col;
    }

    /**
     * @autogenerated
     * @inherit-doc
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Token token = (Token) o;

        if (file_line != token.file_line) {
            return false;
        }
        if (file_col != token.file_col) {
            return false;
        }
        if (text != null ? !text.equals(token.text) : token.text != null) {
            return false;
        }
        return file_name != null ? file_name.equals(token.file_name) : token.file_name == null;
    }

    /**
     * @autogenerated
     * @inherit-doc
     */
    @Override
    public int hashCode() {
        int result = text != null ? text.hashCode() : 0;
        result = 31 * result + (file_name != null ? file_name.hashCode() : 0);
        result = 31 * result + file_line;
        result = 31 * result + file_col;
        return result;
    }
}
